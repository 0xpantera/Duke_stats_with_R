clear
clean
x <- c(0.5, 0.6)
x <- c('a', 'b', 'c')
x
x <- 9:29
x
x <- vector("numeric", 10)
x
x <- 0:6
class(x)
as.numeric(x)
as.logical(x)
as.character(x)
x <- list(1, "a", TRUE, 1 + 4i)
x
m <- matrix(nrow = 2, ncol = 3)
m
m <- matrix(1:6, nrow = 2, ncol = 3)
m
m <- 1:10
m
dim(m) <- c(2, 5)
m
x <- 1:3
y <- 10:12
cbind(x, y)
rbind(x, y)
help.start()
con <- url('https://www.coursera.org/learn/r-programming/lecture/pSHGL/connections-interfaces-to-the-outside-world', 'r')
con <- url('http://www.jhsph.edu', 'r')
x <- readLines(con)
head(x)
x <- list(foo = 1:4, bar= 0.6)
x[1]
x[[1]]
x <- c(1, 2, NA, 4, NA, 5)
bad <- is.na(x)
x[!bad]
y <- c("a", "b", NA, "d", NA, "f")
good <- complete.cases(x, y)
x[good]
y[good]
clear
x <- 1:4, y <- 6:9
x <- 1:4; y <- 6:9
x + y
x > 2
y == 8
x * y
x <- matrix(1:4, 2, 2); y <- matrix(rep(10, 4), 2, 2)
x * y
x %*% y
x <- 4L
class(x)
x <- c(1,3,5)
y <- c(3,2,10)
rbind(x,y)
x <- list(2,"a","b", TRUE)
x[[2]]
x <- 1:4
y <- 2:3
x + y
x <- c(3,5,1,10,12,6)
x[x < 6] == 0
x[x < 6] <- 6
> x <- c(3,5,1,10,12,6)
x <- c(3,5,1,10,12,6)
x[x < 6] <- 0
x <- c(3,5,1,10,12,6)
x[x %in% 1:5] <- 0
x <- c(3,5,1,10,12,6)
x[x==6]<- 0
?read.table
getwd()
getwd()
install.packages("swirl")
q()
install.packages("rkteaching")
install.packages("rk.Teaching")
load("/home/franco/Downloads/fs_neonatos.R.rdata")
View(neonatos)
View(neonatos)
x <- c(1,2,3)
y <- c(a,b,c)
y <- c("a", "b", "c")
z <- matrix(y,z)
z <- matrix(x,y)
y <- c(4,5,6)
z <- matrix(x,y)
View(z)
alumno <- c("Francisco", "Juan", "Pedro", "Maria", "Andres", "Ricardo", "Marta", "Lila", "Nina", "Jose")
nota1 <- c(89, 78, 76, 56, 45, 89, 98, 70, 67, 62)
nota2 <- c(98, 87, 67, 65, 54, 98, 89, 55, 76, 91)
grado <- c(1, 2, 3, 4, 4, 3, 2, 1, 1, 2)
factor(grado)
prueba <- data.frame(alumno, nota1, nota2, grado)
prueba
top <- prueba$nota2 > 70
top
prueba[top]
prueba$nota2[top]
prueba[,top]
prueba$top
subset(prueba, top$nota2)
subset(prueba, top)
suma <- prueba$nota1 + prueba$nota2
suma
cbind(prueba, suma)
library(ggplot2)
simple <- qplot(prueba)
View(prueba)
simple <- qplot(x = alumno, data = prueba)
simple
simple <- qplot(x = grado, data = prueba)
simple
simple <- qplot(x = nota1, data = prueba)
simple
simple <- qplot(x = nota1, data = prueba) +
scale_x_continuous(limits = c(60, 90))
simple
simple <- qplot(x = nota1, data = prueba, binwidth = 1)
simple
simple <- qplot(x = nota1, data = prueba, binwidth = 10)
simple
medianApgar1 <- median(neonatos$apgar1)
medianApgar5 <- median(neonatos$apgar5)
load("/home/franco/Downloads/fs_neonatos.R.rdata")
str(neonatos)
summary(neonatos)
apgarMedian <- median(sumApgar)
sumApgar <- neonatos$apgar1 + neonatos$apgar5
apgarMedian <- median(sumApgar)
apgarMedian
categoriaPeso <- factor(neonatos$peso)
categoriaPeso
pesoMayor <- neonatos$peso > 2.5
pesoMayor
categoriaPeso <- factor(neonatos$peso)
categoriaPeso
categoriaPeso <- levels(pesoMayor, pesoMenor)
histograma <- qplot(x = tabaco.antes, data = neonatos) +
facet_grid(. ~ sexo)
histograma
histograma <- qplot(x = tabaco.antes, data = neonatos,
xlab = "Consumio tabaco antes",
yylab = "Frequencia",
color = I("black"), fill = I("#099DD9")) +
facet_grid(. ~ sexo)
histograma <- qplot(x = tabaco.antes, data = neonatos,
xlab = "Consumio tabaco antes",
ylab = "Frequencia",
color = I("black"), fill = I("#099DD9")) +
facet_grid(. ~ sexo)
histograma
histograma <- qplot(x = peso, data = neonatos,
xlab = "Consumio tabaco antes",
ylab = "Frequencia",
color = I("black"), fill = I("#099DD9"))
histograma <- qplot(x = peso, data = neonatos,
xlab = "Consumio tabaco antes",
ylab = "Frequencia",
color = I("black"), fill = I("#099DD9"))
histograma
histograma <- qplot(x = peso, data = neonatos,
xlab = "Peso",
ylab = "Frequencia",
color = I("black"), fill = I("#099DD9")) +
scale_x_continuous(limits = c(2.0, 3.5))
histograma
boxplot <- qplot(x = apgar5,
data = neonatos,
geom = 'boxplot')
boxplot
boxplot <- qplot(x = sexo, y = apgar5,
data = neonatos,
geom = 'boxplot')
boxplot
x <- c(0,1,2,1,3,0,1,0,1,2,0,1,1,1,2,0,1,3,2,1,2,1,0,1)
media <- median(x)
media
varianza <- var(x)
varianza
desviacion <- sd(x)
desviacion
length(x)
asimetria <- skewness(x)
library(moments)
install.packages("moments")
library(moments)
asimetria <- skewness(x)
asimetria
curtosis <- kurtosis(x)
curtosis
load("~/Downloads/fs_neonatos.R.rdata")
summary(neonatos)
median(neonatos$sexo)
hombres <- neonatos$sexo
hombres
View(neonatos)
View(neonatos)
install.packages("plotly")
q()
install.packages(mclust)
install.packages("mclust")
install.packages("cluster")
install.packages("fpc")
dataset <- datasets::iris
x <- dataset.data
installed.packages("devtools")
install.packages("devtools")
library(devtools)
install.packages("ggplot2")
install_github("StatsWithR/statsr")
install.packages("dplyr")
library(devtools)
install_github("StatsWithR/statsr")
install.packages(devtools)
install.packages("devtools")
install_github("StatsWithR/statsr")
install_github("StatsWithR/statsr")
library(devtools)
install_github("StatsWithR/statsr")
install.packages("dplyr")
install.packages("ggplot2")
library(statsr)
library(dplyr)
library(ggplot2)
library(statsr)
data(arbuthnot)
data(arbuthnot)
library(statsr)
data(arbuthnot)
summary(arbuthnot)
View(arbuthnot)
View(arbuthnot)
arbuthnot
dim(arbuthnot)
names(arbuthnot)
levels(arbuthnot$year)
arbuthnot4year
arbuthnot$year
arbuthnot$boys
arbuthnot$girls
geom_point()
ggplot(data = arbuthnot, aes(x = year, y = girls)) +
geom_point()
5218 + 4683
arbuthnot$boys + arbuthnot$girls
arbuthnot <- arbuthnot %>%
mutate(total = boys + girls)
ggplot(data = arbuthnot, aes(x = year, y = total)) +
geom_line()
ggplot(data = arbuthnot, aes(x = year, y = total)) +
geom_line() +
geom_point()
ggplot(data = arbuthnot, aes(x = boys, y = total)) +
geom_line() +
geom_point()
arbuthnot$boys / arbuthnot$total
arbuthnot <- arbuthnot %>%
mutate(prop_boys = boys / year)
arbuthnot <- arbuthnot %>%
mutate(prop_boys = year / boys)
ggplot(data = arbuthnot, aes(x = year, y = prop_boys)) +
geom_line() +
geom_point()
arbuthnot <- arbuthnot %>%
mutate(more_boys = boys > girls)
data(present)
View(present)
range(present$year)
present <- present %>%
mutate(total = boys + girls)
present <- present %>%
mutate(prop_boys = year / boys)
present <- present %>%
mutate(prop_boys = total / boys)
present <- present %>%
mutate(prop_boys = boys / total)
ggplot(data=present, aes(x = year, y = prop_boys)) +
geom_point() +
geom_line()
present <- present %>%
mutate(more_boys = boys > girls)
ggplot(data=present, aes(x = year, y = more_boys)) +
geom_line()
ggplot(data=present, aes(x = more_boys, y = year)) +
geom_line()
present <- present %>%
mutate(prop_boy_girl = boys / girls)
present <- present %>%
mutate(prop_boy_girl = girls / boys)
ggplot(data=present, aes(x = year, y = prop_boy_girl)) +
geom_point()
present %>%
mutate(total = boys + girls) %>%
arrange(desc(total))
View(present)
library(dplyr)
library(ggplot2)
library(statsr)
View(arbuthnot)
View(arbuthnot)
library(dplyr)
library(ggplot2)
library(statsr)
data(arbuthnot)
write.csv(data=arbuthnot, file = "arbuthnot.csv")
?write.csv
write.csv(arbuthnot, file="arbuthnot.csv")
wd()
pwd
pwd()
data(present)
write.csv(present, file="present.csv")
View(arbuthnot)
mutate(prop_boys = year / boys)
arbuthnot <- arbuthnot %>%
mutate(prop_boys = year / boys)
View(arbuthnot)
geom_point()
arbuthnot <- arbuthnot %>%
mutate(prop_boys = boys / total)
ggplot(data = arbuthnot, aes(x = year, y = prop_boys)) +
geom_line() +
geom_point()
View(arbuthnot)
arbuthnot <- arbuthnot %>%
mutate(prop_boys = boys / total)
mutate(total = boys + girls)
arbuthnot <- arbuthnot %>%
mutate(total = boys + girls)
arbuthnot <- arbuthnot %>%
mutate(prop_boys = boys / total)
library(statsr)
library(statsr)
library(dplyr)
library(ggplot2)
data(nycflights)
View(nycflights)
names(nycflights)
?nycflights
str(nycflights)
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram()
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram(binwidth = 15)
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram(binwidth = 150)
rdu_flights <- nycflights %>%
filter(dest == "RDU")
ggplot(data = rdu_flights, aes(x = dep_delay)) +
geom_histogram()
View(rdu_flights)
rdu_flights %>%
summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay), n = n())
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
sfo_feb_flights %>% summarise(n = n())
ggplot(data = sfo_feb_flights, aes(x = arr_delay)) +
geom_histogram()
sfo_feb_flights %>%
summarise(mean_arr_del = mean(arr_delay), std_arr_del = sd(arr_delay), iqr_arr_del = IQR(arr_delay))
rdu_flights %>%
group_by(origin) %>%
summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay), n = n())
View(sfo_feb_flights)
sfo_feb_flights %>%
group_by(carrier) %>%
summarise(med_arr_del = median(arr_delay), iqr_arr_del = IQR(arr_delay))
View(nycflights)
nycflights %>%
group_by(month) %>%
summarise(mean_dd = mean(dep_delay)) %>%
arrange(desc(mean_dd))
nycflights %>%
group_by(month) %>%
summarise(med_dep_del = median(dep_delay)) %>%
arrange(desc(med_dep_del))
ggplot(nycflights, aes(x = factor(month), y = dep_delay)) +
geom_boxplot()
nycflights <- nycflights %>%
mutate(dep_type = ifelse(dep_delay < 5, "on time", "delayed"))
nycflights %>%
group_by(origin) %>%
summarise(ot_dep_rate = sum(dep_type == "on time") / n()) %>%
arrange(desc(ot_dep_rate))
ggplot(data = nycflights, aes(x = origin, fill = dep_type)) +
geom_bar()
nycflights <- nycflights %>%
mutate(avg_speed = (distance / (air_time/60))
View(nycflights)
nycflights <- nycflights %>%
mutate(avg_speed = distance/(air_time/60))
View(nycflights)
?arrange
nycflights %>%
group_by(tailnum) %>%
arrange(avg_speed)
nycflights %>%
group_by(tailnum) %>%
arrange(avg_speed) %>%
select(avg_speed, tailnum)
nycflights %>%
group_by(tailnum) %>%
arrange(desc(avg_speed)) %>%
select(avg_speed, tailnum)
ggplot(data = nycflights, aes(x = avg_speed, y = distance))
ggplot(data = nycflights, aes(x = avg_speed, y = distance)) +
geom_point()
ggplot(data = nycflights, aes(x = distance, y = avg_speed)) +
geom_point()
nycflights <- nycflights %>%
mutate(arr_type = ifelse(arr_delay <= 0, "on time", "delayed"))
View(nycflights)
nycflights %>%
group_by(dep_type) %>%
summarise(ot_arr_rate = sum(arr_type == "on time") / n())
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram()
data(nycflights)
library(statsr)
library(dplyr)
library(ggplot2)
data(nycflights)
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram()
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram(binwidth = 15)
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram(binwidth = 150)
library(statsr)
library(statsr)
library(dplyr)
library(ggplot2)
data(kobe_basket)
names(kobe_basket)
View(kobe_basket)
kobe_streak <- calc_streak(kobe_basket$shot)
View(kobe_streak)
geom_histogram(binwidth = 1)
ggplot(data = kobe_streak, aes(x = length)) +
geom_histogram(binwidth = 1)
median(kobe_streak$length)
IQR(kobe_streak$length)
coin_outcomes <- c("heads", "tails")
sample(coin_outcomes, size = 1, replace = TRUE)
```
sample(coin_outcomes, size = 1, replace = TRUE)
sample(coin_outcomes, size = 1, replace = TRUE)
sample(coin_outcomes, size = 1, replace = TRUE)
sample(coin_outcomes, size = 1, replace = TRUE)
sim_fair_coin <- sample(coin_outcomes, size = 100, replace = TRUE)
sim_fair_coin
table(sim_fair_coin)
sim_unfair_coin <- sample(coin_outcomes, size = 100, replace = TRUE,
prob = c(0.2, 0.8))
table(sim_unfair_coin)
shot_outcomes <- c("H", "M")
sim_basket <- sample(shot_outcomes, size = 1, replace = TRUE)
table(sim_basket)
shot_outcomes <- c("H", "M")
sim_basket <- sample(shot_outcomes, size = 1, replace = TRUE)
sample(shot_outcomes, size=100, replace=TRUE)
table(sample(shot_outcomes, size=100, replace=TRUE))
?sample
sim_basket <- sample(shot_outcomes, size = 1, replace = TRUE, prob = c(0.45, 0.55))
sim_basket <- sample(shot_outcomes, size = 133, replace = TRUE, prob = c(0.45, 0.55))
sim_streak <- calc_streak(sim_basket)
View(sim_streak)
View(sim_streak)
ggplot(data = sim_streak, aes(x = length)) +
geom_histogram(binwidth = 1)
median(sim_streak)
median(sim_streak$length)
IQR(sim_streak$length)
View(kobe_streak)
library(statsr)
calc_streak
install.packages("evaluate")
library(ggplot2)
library(dplyr)
load("brfss2013.RData")
setwd("~/Documents/r_stats/data_project/")
load("brfss2013.RData")
brfss2013 %>%
select(qlstres2, qlmentl2, exract11) %>%
str()
brfss2013 %>%
filter(!is.na(exract11), exract11 != "Other", exract11 %in% c("Walking","Running", "Gardening (spading, weeding, digging, filling)", "Weight lifting", "Bicycling")) %>%
group_by(exract11) %>%
summarise(count = n()) %>%
arrange(desc(count))
brfss2013 <- brfss2013 %>%
filter(!is.na(qlmentl2), !is.na(qlstres2)) %>%
mutate(anx_dep = brfss2013$qlstres2 + brfss2013$qlmentl2)
brfss2013 %>%
group_by(anx_dep) %>%
summarise(count = n()) %>%
arrange(desc(anx_dep))
brfss2013 <- brfss2013 %>%
mutate(anx_dep = brfss2013$qlstres2 + brfss2013$qlmentl2)
brfss2013 %>%
group_by(anx_dep) %>%
summarise(count = n()) %>%
arrange(desc(anx_dep))
brfss2013 %>%
filter(!is.na(exract11), exract11 != "Other", exract11 %in% c("Walking","Running", "Gardening (spading, weeding, digging, filling)", "Weight lifting", "Bicycling")) %>%
group_by(exract11) %>%
ggplot(aes(x=exract11, y=anx_dep))+
geom_boxplot()
